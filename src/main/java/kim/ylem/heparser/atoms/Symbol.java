package kim.ylem.heparser.atoms;

import kim.ylem.heparser.AtomMap;

import java.util.HashMap;
import java.util.Map;

public class Symbol extends Atom {
    private static final Map<String, String> symbolMap = new HashMap<>();

    public static void register() {
        symbolMap.put("⌈", "\\lceil");
        symbolMap.put("⌉", "\\rceil");
        symbolMap.put("⌊", "\\lfloor");
        symbolMap.put("⌋", "\\rfloor");
        symbolMap.put("∍", "\\owns");
        symbolMap.put("±", "\\pm");
        symbolMap.put("÷", "\\div");
        symbolMap.put("∥", "\\Vert");
        symbolMap.put("≦", "\\leq");
        symbolMap.put("⊐", "\\sqsupset");
        symbolMap.put("⊒", "\\sqsupseteq");
        symbolMap.put("▷", "\\triangleright");
        symbolMap.put("◁", "\\triangleleft");
        symbolMap.put("", "'");
        symbolMap.put("-+", "\\mp");
        symbolMap.put("->", "\\rightarrow");
        symbolMap.put("!=", "\\neq");
        symbolMap.put("+-", "\\pm");
        symbolMap.put("<->", "\\leftrightarrow");
        symbolMap.put("<<", "\\ll");
        symbolMap.put("<<<", "\\lll");
        symbolMap.put("<=", "\\leq");
        symbolMap.put("==", "\\equiv");
        symbolMap.put(">=", "\\geq");
        symbolMap.put(">>", "\\gg");
        symbolMap.put(">>>", "\\ggg");
        symbolMap.put("aleph", "\\aleph");
        symbolMap.put("angle", "\\angle");
        symbolMap.put("approx", "\\approx");
        symbolMap.put("assert", "\\vdash");
        symbolMap.put("ast", "\\ast");
        symbolMap.put("asymp", "\\asymp");
        symbolMap.put("att", "\\mathop ※");
        symbolMap.put("base", "\\mathop ⌂");
        symbolMap.put("because", "\\because");
        symbolMap.put("benzene", "\\mathop ⌬");
        symbolMap.put("bigcirc", "\\bigcirc");
        symbolMap.put("bot", "\\bot");
        symbolMap.put("bullet", "\\bullet");
        symbolMap.put("cap", "\\cap");
        symbolMap.put("cdot", "\\cdot");
        symbolMap.put("cdots", "\\cdots");
        symbolMap.put("centigrade", "^{\\circ}C");
        symbolMap.put("circ", "\\circ");
        symbolMap.put("cong", "\\cong");
        symbolMap.put("cup", "\\cup");
        symbolMap.put("dagger", "\\dagger");
        symbolMap.put("dashv", "\\dashv");
        symbolMap.put("ddagger", "\\ddagger");
        symbolMap.put("ddots", "\\ddots");
        symbolMap.put("del", "\\nabla");
        symbolMap.put("diamond", "\\diamond");
        symbolMap.put("div", "\\div");
        symbolMap.put("divide", "\\div");
        symbolMap.put("dline", "\\Vert");
        symbolMap.put("doteq", "\\doteq");
        symbolMap.put("dotsaxis", "\\cdots");
        symbolMap.put("dotsdiag", "\\ddots");
        symbolMap.put("dotslow", "\\ldots");
        symbolMap.put("dotsvert", "\\vdots");
        symbolMap.put("dsum", "\\dotplus");
        symbolMap.put("ell", "\\ell");
        symbolMap.put("emptyset", "\\emptyset");
        symbolMap.put("equiv", "\\equiv");
        symbolMap.put("exist", "\\exists");
        symbolMap.put("exists", "\\exists");
        symbolMap.put("fahrenheit", "^{\\circ}F");
        symbolMap.put("ge", "\\geq");
        symbolMap.put("geq", "\\geq");
        symbolMap.put("ggg", "\\ggg");
        symbolMap.put("hbar", "\\hbar");
        symbolMap.put("hcross", "┼");
        symbolMap.put("hdown", "┬");
        symbolMap.put("hleft", "┤");
        symbolMap.put("hookleft", "\\hookleftarrow");
        symbolMap.put("hookright", "\\hookrightarrow");
        symbolMap.put("hright", "├");
        symbolMap.put("hund", "\\mathop ‰");
        symbolMap.put("hup", "┴");
        symbolMap.put("identical", "\\mathop ∷");
        symbolMap.put("imath", "\\imath");
        symbolMap.put("in", "\\in");
        symbolMap.put("inf", "\\infty");
        symbolMap.put("infinity", "\\infty");
        symbolMap.put("infty", "\\infty");
        symbolMap.put("iso", "\\Bumpeq");
        symbolMap.put("jmath", "\\jmath");
        symbolMap.put("land", "\\land");
        symbolMap.put("langle", "<");
        symbolMap.put("laplace", "\\mathcal{L}");
        symbolMap.put("lbrace", "{");
        symbolMap.put("lbrack", "[");
        symbolMap.put("lceil", "\\lceil");
        symbolMap.put("ldots", "\\ldots");
        symbolMap.put("le", "\\leq");
        symbolMap.put("leq", "\\leq");
        symbolMap.put("lfloor", "\\lfloor");
        symbolMap.put("line", "\\vert");
        symbolMap.put("liter", "\\ell");
        symbolMap.put("lll", "\\lll");
        symbolMap.put("lor", "\\lor");
        symbolMap.put("lslant", "\\diagup");
        symbolMap.put("mapsto", "\\mapsto");
        symbolMap.put("massert", "\\dashv");
        symbolMap.put("mho", "\\mho");
        symbolMap.put("msangle", "\\measuredangle");
        symbolMap.put("nabla", "\\nabla");
        symbolMap.put("nearrow", "\\nearrow");
        symbolMap.put("ne", "\\neq");
        symbolMap.put("neg", "\\neg");
        symbolMap.put("neq", "\\neq");
        symbolMap.put("ni", "\\owns");
        symbolMap.put("nin", "\\notin");
        symbolMap.put("notin", "\\notin");
        symbolMap.put("nowns", "\\not\\owns");
        symbolMap.put("nsubset", "\\not\\subset");
        symbolMap.put("nsubseteq", "\\nsubseteq");
        symbolMap.put("nsupset", "\\not\\supset");
        symbolMap.put("nsupseteq", "\\nsupseteq");
        symbolMap.put("nwarrow", "\\nwarrow");
        symbolMap.put("odiv", "\\oslash");
        symbolMap.put("oslash", "\\oslash");
        symbolMap.put("odot", "\\odot");
        symbolMap.put("ominus", "\\ominus");
        symbolMap.put("oplus", "\\oplus");
        symbolMap.put("otimes", "\\otimes");
        symbolMap.put("owns", "\\owns");
        symbolMap.put("parallel", "\\parallel");
        symbolMap.put("partial", "\\partial");
        symbolMap.put("phor", "═");
        symbolMap.put("plusminus", "\\pm");
        symbolMap.put("pver", "║");
        symbolMap.put("rangle", ">");
        symbolMap.put("rbrace", "}");
        symbolMap.put("rbrack", "]");
        symbolMap.put("rceil", "\\rceil");
        symbolMap.put("reimage", "\\risingdotseq");
        symbolMap.put("rfloor", "\\rfloor");
        symbolMap.put("round", "\\partial");
        symbolMap.put("rslant", "\\diagdown");
        symbolMap.put("rtangle", "\\mathop ⊾");
        symbolMap.put("sangle", "\\sphericalangle");
        symbolMap.put("sdots", "\\kern3mu\\raise1mu{.}\\kern3mu\\raise6mu{.}\\kern3mu\\raise12mu{.}");
        symbolMap.put("searrow", "\\searrow");
        symbolMap.put("sim", "\\sim");
        symbolMap.put("simeq", "\\simeq");
        symbolMap.put("smallinter", "\\cap");
        symbolMap.put("smallprod", "\\prod");
        symbolMap.put("smallsum", "\\sum");
        symbolMap.put("smallunion", "\\cup");
        symbolMap.put("smcoprod", "\\coprod");
        symbolMap.put("sqcap", "\\sqcap");
        symbolMap.put("sqcup", "\\sqcup");
        symbolMap.put("sqsubset", "\\sqsubset");
        symbolMap.put("sqsubseteq", "\\sqsubseteq");
        symbolMap.put("sqsupset", "\\sqsupset");
        symbolMap.put("sqsupseteq", "\\sqsupseteq");
        symbolMap.put("star", "\\bigstar");
        symbolMap.put("subset", "\\subset");
        symbolMap.put("subseteq", "\\subseteq");
        symbolMap.put("succ", ">");
        symbolMap.put("superset", "\\supset");
        symbolMap.put("supseteq", "\\supseteq");
        symbolMap.put("swarrow", "\\swarrow");
        symbolMap.put("therefore", "\\therefore");
        symbolMap.put("thou", "\\mathop ‱");
        symbolMap.put("times", "\\times");
        symbolMap.put("top", "\\top");
        symbolMap.put("triangle", "\\triangle");
        symbolMap.put("triangled", "\\triangledown");
        symbolMap.put("trianglel", "\\triangleleft");
        symbolMap.put("triangler", "\\triangleright");
        symbolMap.put("uplus", "\\uplus");
        symbolMap.put("vdash", "\\vdash");
        symbolMap.put("vdots", "\\vdots");
        symbolMap.put("vee", "\\vee");
        symbolMap.put("wedge", "\\wedge");
        symbolMap.put("well", "\\#");
        symbolMap.put("wp", "\\wp");
        symbolMap.put("xor", "\\veebar");

        symbolMap.put("alpha", "\\alpha");
        symbolMap.put("beta", "\\beta");
        symbolMap.put("chi", "\\chi");
        symbolMap.put("delta", "\\delta");
        symbolMap.put("downarrow", "\\downarrow");
        symbolMap.put("epsilon", "\\epsilon");
        symbolMap.put("eta", "\\eta");
        symbolMap.put("gamma", "\\gamma");
        symbolMap.put("iota", "\\iota");
        symbolMap.put("kappa", "\\kappa");
        symbolMap.put("lambda", "\\lambda");
        symbolMap.put("larrow", "\\leftarrow");
        symbolMap.put("leftarrow", "\\leftarrow");
        symbolMap.put("lrarrow", "\\leftrightarrow");
        symbolMap.put("mu", "\\mu");
        symbolMap.put("nu", "\\nu");
        symbolMap.put("omega", "\\omega");
        symbolMap.put("omicron", "\\omicron");
        symbolMap.put("phi", "\\phi");
        symbolMap.put("pi", "\\pi");
        symbolMap.put("psi", "\\psi");
        symbolMap.put("rarrow", "\\rightarrow");
        symbolMap.put("rho", "\\rho");
        symbolMap.put("rightarrow", "\\rightarrow");
        symbolMap.put("sigma", "\\sigma");
        symbolMap.put("tau", "\\tau");
        symbolMap.put("theta", "\\theta");
        symbolMap.put("udarrow", "\\updownarrow");
        symbolMap.put("uparrow", "\\uparrow");
        symbolMap.put("upsilon", "\\upsilon");
        symbolMap.put("vert", "\\vert");
        symbolMap.put("xi", "\\xi");
        symbolMap.put("zeta", "\\zeta");

        symbolMap.put("Alpha", "A");
        symbolMap.put("Beta", "B");
        symbolMap.put("Chi", "X");
        symbolMap.put("Delta", "\\Delta");
        symbolMap.put("Downarrow", "\\Downarrow");
        symbolMap.put("Epsilon", "E");
        symbolMap.put("Eta", "H");
        symbolMap.put("Gamma", "\\Gamma");
        symbolMap.put("Iota", "I");
        symbolMap.put("Kappa", "K");
        symbolMap.put("Lambda", "\\Lambda");
        symbolMap.put("Larrow", "\\Leftarrow");
        symbolMap.put("Leftarrow", "\\Leftarrow");
        symbolMap.put("Lrarrow", "\\Leftrightarrow");
        symbolMap.put("Mu", "M");
        symbolMap.put("Nu", "N");
        symbolMap.put("Omega", "\\Omega");
        symbolMap.put("Omicron", "O");
        symbolMap.put("Phi", "\\Phi");
        symbolMap.put("Pi", "\\Pi");
        symbolMap.put("Psi", "\\Psi");
        symbolMap.put("Rarrow", "\\Rightarrow");
        symbolMap.put("Rho", "P");
        symbolMap.put("Rightarrow", "\\Rightarrow");
        symbolMap.put("Sigma", "\\Sigma");
        symbolMap.put("Tau", "T");
        symbolMap.put("Theta", "\\Theta");
        symbolMap.put("Udarrow", "\\Updownarrow");
        symbolMap.put("Uparrow", "\\Uparrow");
        symbolMap.put("Upsilon", "\\Upsilon");
        symbolMap.put("Vert", "\\Vert");
        symbolMap.put("Xi", "\\Xi");
        symbolMap.put("Zeta", "Z");

        symbolMap.put("Deg", " ^\\circ");
        symbolMap.put("Forall", "\\forall");
        symbolMap.put("Imag", "\\Im");
        symbolMap.put("image", "\\fallingdotseq");
        symbolMap.put("Lnot", "\\lnot");
        symbolMap.put("Minusplus", "\\mp");
        symbolMap.put("Models", "\\models");
        symbolMap.put("prec", "<");
        symbolMap.put("prep", "\\bot");
        symbolMap.put("prime", "'");
        symbolMap.put("propto", "\\propto");
        symbolMap.put("varepsilon", "\\varepsilon");
        symbolMap.put("varphi", "\\varphi");
        symbolMap.put("varpi", "\\varpi");
        symbolMap.put("varsigma", "\\varsigma");
        symbolMap.put("vartheta", "\\vartheta");
        symbolMap.put("varupsilon", "\\varupsilon");

        AtomMap.putAll(symbolMap, Symbol.class);
        AtomMap.remove("Imag");
        AtomMap.remove("IMAGE");
        AtomMap.remove("Lnot");
        AtomMap.remove("Prec");
        AtomMap.remove("Prep");
        AtomMap.remove("Prime");
        AtomMap.remove("PRIME");
        AtomMap.remove("Propto");
        AtomMap.remove("Varepsilon");
        AtomMap.remove("VAREPSILON");
        AtomMap.remove("Varphi");
        AtomMap.remove("VARPHI");
        AtomMap.remove("Varpi");
        AtomMap.remove("VARPI");
        AtomMap.remove("Varsigma");
        AtomMap.remove("VARSIGMA");
        AtomMap.remove("Vartheta");
        AtomMap.remove("VARTHETA");
        AtomMap.remove("Varupsilon");
        AtomMap.remove("VARUPSILON");
    }

    private final String function;

    public Symbol(String function) {
        this.function = symbolMap.getOrDefault(function.charAt(0) + function.substring(1).toLowerCase(),
                symbolMap.get(function.toLowerCase()));
    }

    @Override
    protected String toLaTeX(int flag) {
        return function + " ";
    }
}
